name: nightly-build

on:
  push:
    branches:
      - master

permissions:
  contents: write
  packages: write
  # issues: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Run All Tests
        run: |
          echo "Running all tests (unit + integration)..."
          make test
      
      - name: Push metrics to dedicated branch
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          echo "Publishing metrics to 'metrics' branch..."
          if [ ! -d metrics ]; then
            echo "No metrics directory found; skipping publish."
            exit 0
          fi

          REPO="${GITHUB_SERVER_URL:-https://github.com}/${GITHUB_REPOSITORY}.git"
          AUTH_REPO="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          CLONE_DIR=$(mktemp -d)
          echo "Cloning metrics branch into temp dir..."
          git clone --no-checkout "$AUTH_REPO" "$CLONE_DIR"
          cd "$CLONE_DIR"
          if git ls-remote --exit-code origin metrics >/dev/null 2>&1; then
            git checkout -B metrics origin/metrics
          else
            git checkout --orphan metrics
          fi
          # Clean non-metrics files only; preserve existing metrics history
          # find . -mindepth 1 -maxdepth 1 ! -name .git ! -name metrics -exec rm -rf {} +
          mkdir -p metrics
          cp -r "$GITHUB_WORKSPACE/metrics/." metrics/ || true

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Stage both new metrics content and deletions of any other files
          git add -A
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "chore(metrics): update for ${GITHUB_SHA} (run ${GITHUB_RUN_ID})"
            git push --set-upstream origin metrics
            echo "Metrics pushed to 'metrics' branch."
          else
            echo "No metrics changes to commit."
          fi
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set build date
        id: build_date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Set commit short hash
        id: commit_hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: nightly-${{ steps.build_date.outputs.date }}-${{ steps.commit_hash.outputs.hash }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: UDPlex
          path: dist/*

      - name: Push Docker images
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/udplex:dev