name: nightly-build

on:
  push:
    branches:
      - master

permissions:
  contents: write
  packages: write
  # issues: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set build date
        id: build_date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Set commit short hash
        id: commit_hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: nightly-${{ steps.build_date.outputs.date }}-${{ steps.commit_hash.outputs.hash }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: UDPlex
          path: dist/*

      - name: List dev images
        run: |
          docker image ls --format "{{.Repository}}:{{.Tag}}" | \
            grep -e "$GITHUB_REPOSITORY:.*$(git rev-parse --short HEAD).*" | \
            paste -sd ' ' /dev/stdin > images

      - name: Push dev images
        run: |
          cat images | xargs -d ' ' -I{} -n1 sh -c "docker push {}"

      - name: Create and push manifest for :dev tag
        run: |
          docker manifest create $GITHUB_REPOSITORY:dev $(cat images)
          docker manifest push $GITHUB_REPOSITORY:dev
